<?php 
# need this to include this to use the api.yml config file
require_once(sfConfigCache::getInstance()->checkConfig('config/api.yml')); 
?>


dev:
  sf_guard_plugin:
    is_social:            on 

# default values
all:
  sf_guard_plugin:
    is_social:            off
    
  sfSimpleGoogleSitemap:
    orm:                  Propel                 # possible values: auto, Propel, DbFinder. 'auto' is auto detection. Note: case sensitive!
    urls:                                        # define multiple static urls here
      homepage:                                  # just a name
        url:              https://parlamento18.openpolis.it  # full URL, e.g.: with http:// prefix
        freq:             daily                 # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         1.0                    # 1.0 is top priority (100%) compared to 0.2 which is less priority (20%)
      disegnoList:
        url:              https://parlamento18.openpolis.it/attiDisegni  # full URL, e.g.: with http:// prefix
        freq:             daily                 # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         1.0                    # 1.0 is top priority (100%) compared to 0.2 which is less priority (20%)
      decretiList:
        url:              https://parlamento18.openpolis.it/attiDecretiLegge  # full URL, e.g.: with http:// prefix
        freq:             daily                 # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         1.0                    # 1.0 is top priority (100%) compared to 0.2 which is less priority (20%)  
      nonLegList:
        url:              https://parlamento18.openpolis.it/attiNonLegislativi/data_pres/desc  # full URL, e.g.: with http:// prefix
        freq:             daily                 # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         1.0                    # 1.0 is top priority (100%) compared to 0.2 which is less priority (20%) 
      votazioni:
        url:              https://parlamento18.openpolis.it/votazioni/data/desc  # full URL, e.g.: with http:// prefix
        freq:             daily                 # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         1.0                    # 1.0 is top priority (100%) compared to 0.2 which is less priority (20%) 
      argomenti:
        url:              https://parlamento18.openpolis.it/argomenti  # full URL, e.g.: with http:// prefix
        freq:             weekly                 # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         1.0                    # 1.0 is top priority (100%) compared to 0.2 which is less priority (20%)      
    models:                                      # define multiple models to generate sitemap from
      model_parlamentare:
        model:            OppPolitico
        module:           parlamentare
        action:           cosa
        params:                                  # parameters for the url
            id: getId                           # name : method to get the parameter value
        freq:             daily                 # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         0.75                    # 1.0 is top priority (100%) compared to 0.5 which is less priority (50%)
      model_posts:                               # just a name
        model:            sfSimpleBlogPost       # model class name
        module:           sfSimpleBlog           # name of module for the url to make up the url
        action:           show                   # name of action for the url to make up the url
        #routing:          "@routing"             # use a routing URL (if set)
        params:                                  # parameters for the url
            stripped_title: getStrippedTitle       # name : method to get the parameter value
        date:             getCreatedAt           # method to get date last updated for the url
        criteria:                                # criterias to filter the records to include in the sitemap
            - { column: is_published, method: IsPublished, operator: = , value: 1 }
        order_by: { column: id, method: Id, sort: desc }
        limit:            10                     # limit to the first x number of records
        freq:             daily                  # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         0.5                    # 1.0 is top priority (100%) compared to 0.5 which is less priority (50%)
      model_atto:                               # just a name
        model:            OppAtto       # model class name
        module:           atto           # name of module for the url to make up the url
        action:           index                   # name of action for the url to make up the url
        routing:          "@singolo_atto"             # use a routing URL (if set)
        params:                                  # parameters for the url
            id: getId       # name : method to get the parameter value
        date:             getCreatedAt           # method to get date last updated for the url
        order_by: { column: id, method: Id, sort: desc }
        limit:            2000                     # limit to the first x number of records
        freq:             hourly                  # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         0.8                    # 1.0 is top priority (100%) compared to 0.5 which is less priority (50%) 
      model_emendamento:                               # just a name
        model:            OppEmendamento       # model class name
        module:           emendamento           # name of module for the url to make up the url
        action:           show                   # name of action for the url to make up the url
        #routing:          "@singolo_atto"             # use a routing URL (if set)
        params:                                  # parameters for the url
            id: getId       # name : method to get the parameter value
        date:             getCreatedAt           # method to get date last updated for the url
        order_by: { column: id, method: Id, sort: desc }
        limit:            2000                     # limit to the first x number of records
        freq:             daily                  # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         0.8                    # 1.0 is top priority (100%) compared to 0.5 which is less priority (50%)
      model_argomento:                               # just a name
        model:            Tag       # model class name
        module:           argomento           # name of module for the url to make up the url
        action:           showAggiornamenti                  # name of action for the url to make up the url
        #routing:          "@singolo_atto"             # use a routing URL (if set)
        params:                                  # parameters for the url
            triple_value: getTripleValue      # name : method to get the parameter value
        limit:            8000                     # limit to the first x number of records
        freq:             daily                  # must be either: always, hourly, daily, weekly, monthly, yearly, never
        priority:         0.8                    # 1.0 is top priority (100%) compared to 0.5 which is less priority (50%)   
        
     

  
  // massimo numero di notifiche per un termine
  alert_max_results: 100
  
  // numero di giorni precedenti se last_alerted null
  alert_default_days_back: 2
  
  // n. max di token memorizzati nella session per utente
  voting_max_tokens: 1200
  
  limit_interessi_argomento: 10
  limit_classifica_parlamentari_sioccupanodi: 50
  limit_classifica_parlamentari_sioccupanodi_chart: 10
  
  sfImageTransformPlugin:
    default_adapter: GD # GD or ImageMagick
    default_image: { mime_type: image/jpeg, filename: Untitled.jpeg }

  premium:
    max_items: 10
    max_tags: 3

  # url sito camera
  # url_sito_camera: "http://www.camera.it"
    
  # remote locations
  remote: 	 	 
    openpolis_api_key:                 "<?php echo sfConfig::get('api_openpolis_key', '--XXX(-:-)XXX--'); ?>"
    politicians_images_service_url:    "https://<?php echo sfConfig::get('sf_remote_openpolis_host') ?>/api/getPolImage"
  
  # json api
  api:
    classifiche_limit: 10
  
  # cookies
  cookies:
    path:                 '/'
    domain:               'openpolis.it'
    sso_name:             'opSSO'
    remember_name:        'opRemember'
    remember_key_expiration_age: 604800 # (7 days)

  main_title: OpenParlamento
  
  deppPropelActAsTaggableBehaviorPlugin:
    anonymous_tagging:           false
    allows_tagging_removal:      'self'
    tagging_removal_credentials: ['moderatore', 'amministratore']
    use_unique_triple_values:    true
    limit:                       1000

  solr_routes: true

  # varie
  monitored_acts_per_type_limit: 5
  legislatura_data_inizio: '2018-03-23'
  legislatura_corrente: 18
  
  sfEmendPlugin:    
    user:
      cu_id_method:    getId
      profile_class:   OppUser
      name_method:     __toString
      allow_anonymous: false
    allowed_tags:
      a:              <a>
      em:             <em>
      i:              <i>
      p:              <p>
      strong:         <strong>

    
  deppPropelActAsCommentableBehaviorPlugin:    
    automoderation:   captcha
    namespaces:
      frontend:       
      backend:        administrator
    count:
      enabled:        true
      method:         setsfCommentCount
      namespace:      frontend
    user:
      enabled:        true
      cu_id_method:   getId
      class:          OppUser
      name_method:    __toString
      email_method:   getEmail
      website_method: getUrlPersonalWebsite
    allowed_tags:
      a:              <a>
      blockquote:     <blockquote>
      code:           <code>
      em:             <em>
      i:              <i>
      p:              <p>
      strong:         <strong>



  sfSimpleBlog:
    user_class:          OppUser
    use_bundled_layout:  false
    use_post_extract:    true   # display extract in post list instead of full post body
    use_date_in_url:     true
    use_rich_text:       true
    use_media_library:   true
    post_max_per_page:   10
    title:         OpenParlamento - Blog
    tagline:       OpenParlamento Tagline
    author:        -
    email:         info@openpolis.it
    sidebar:       [recent_posts, tags, feeds, blogroll, meta]

    blogroll:
      - { title: "Openpolis", url: 'https://www.openpolis.it' }
      - { title: "Voisietequi", url: 'http://www.voisietequi.it' }

    comment_automoderation: captcha  # triggers the automoderation of comments. Possible values are:
                                     # on: comments are not published until a moderator accepts them
                                     # first_post: the first comment of a user must be accepted, subsequent posts are accepted automatically
                                     # off: comments are automatically accepted and published
                                     # captcha: comments are accepted and published, but a captcha has to be filled

    comment_mail_alert: on         # send an email to the blog owner when a comment is posted.
                                   # Possible values are: 
                                   # on: send an email for every posted comment
                                   # moderated: send an email for every automoderated comment


  nahoWikiPlugin:
    include_breadcrumbs:    off            # Include breadcrumbs slot (disable if you include the slot in your layout) ?
    include_pagename:       off            # Display page's name when viewing content ?
    include_toc:            off            # Display Table of Contents at top of every page
    default_description:    'Descrizione wiki, a cura degli utenti.'
    

  comments:                enabled
  comments_use_ajax:       false
  comment_automoderation:  'captcha'    # comment automoderation; possible values are:
                                        # on: comments are not published until a moderator accepts them
                                        # first_post: the first comment of a user must be accepted, 
                                        #             subsequent posts are accepted automatically
                                        # off: comments are automatically accepted and published
                                        # captcha: comments are accepted and published, but requires a captcha (requires sfCaptcha)
  comment_mail_alert:      'on'         # send an email to the moderator when a content is posted. 
                                        # Possible values are:                                     
                                        # on: send an email for every posted comment               
                                        # moderated: send an email for every automoderated comment 
                                        # off: never send emails

  atto:
    pagination_limit:  15

  news_dropdown_limit: 7
  
  pagination:
    limit:     15
    num_links: 9

  voto:
    "1":     "Assente"
    "2":     "Astenuto"
    "3":     "Contrario"
    "4":     "Favorevole"
    "5":     "In missione"
    "6":     "Partecipante votazione non valida"
    "7":     "Presidente di turno"
    "8":     "Richiedente la votazione e non votante"
    "9":     "Voto segreto"

  iter_id:
    "decaduto":    "14"
    "convertito":  "63"
  
  newsletter:
    from_address:   "noreply@openpolis.it"
    sender_address: "noreply@openpolis.it"
    from_tag:       "openparlamento"
    
  mail_per_redazione:
    site_address:         "https://<?php echo sfConfig::get('sf_site_url', 'parlamento18.openpolis.it')?>"
  
  subscription:
    civicus_limit_reached_tags:       "se vuoi monitorare gli argomenti aderisci all'offerta premium"
    civicus_limit_reached_attos:      "se vuoi monitorare altri atti aderisci all'offerta premium"
    civicus_limit_reached_politicos:  "se vuoi monitorare altri politici aderisci all'offerta premium"
    civicus_limit_reached_alerts:     "se vuoi aggiungere altri avvisi, aderisci all'offerta premium"    
    premium_limit_reached_tags:       "se vuoi monitorare altri argomenti contattaci"
    premium_limit_reached_attos:      "se vuoi monitorare altri atti contattaci"
    premium_limit_reached_politicos:  "se vuoi monitorare altri politici contattaci"
    premium_limit_reached_alerts:     "se vuoi aggiungere altri avvisi, contattaci"
    civicus_promoted:                 "sei diventato un utente Premium! da ora puoi monitorare fino a 10 tra politici e atti e fino a 3 argomenti"
    
  circoscrizioni:
    "abruzzo":               "65"
    "basilicata":            "77"
    "calabria":              "78"
    "campania":              "72"
    "campania_1":            "72"
    "campania_2":            "72"
    "emilia_romagna":        "45"
    "friuli_venezia_giulia": "36"
    "lazio":                 "62"
    "lazio_1":               "62"
    "lazio_2":               "62"
    "liguria":               "42"
    "lombardia":             "25"
    "lombardia_1":           "25"
    "lombardia_2":           "25"
    "lombardia_3":           "25"
    "marche":                "57"
    "molise":                "67"
    "piemonte":              "21"
    "piemonte_1":            "21"
    "piemonte_2":            "21"
    "puglia":                "75"
    "sardegna":              "88"
    "sicilia":               "82"
    "sicilia_1":             "82"
    "sicilia_2":             "82"
    "toscana":               "52"
    "trentino_alto_adige":   "32"
    "umbria":                "55"
    "valle_d_aosta":         "23"
    "veneto":                "34"
    "veneto_1":              "34"
    "veneto_2":              "34"
